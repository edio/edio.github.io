<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 127.0.0.1</title><link>https://127001.me/post/</link><description>Recent content in Posts on 127.0.0.1</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Dmytro Kostiuchenko</copyright><lastBuildDate>Sun, 26 Jul 2020 22:30:00 -0400</lastBuildDate><atom:link href="https://127001.me/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Eliminate backlight flicker with Intel i915</title><link>https://127001.me/post/eliminate-backlight-flicker-with-i915/</link><pubDate>Sun, 26 Jul 2020 22:30:00 -0400</pubDate><guid>https://127001.me/post/eliminate-backlight-flicker-with-i915/</guid><description>&lt;div class="admonitionblock note">
&lt;table>
&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-note" title="Note">&lt;/i>
&lt;/td>
&lt;td class="content">
&lt;div class="paragraph">
&lt;p>This is a revised version of my post from 2013 previously published at
&lt;a href="http://devbraindom.blogspot.com/2013/03/eliminate-led-screen-flicker-with-intel.html" class="bare">http://devbraindom.blogspot.com/2013/03/eliminate-led-screen-flicker-with-intel.html&lt;/a>.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Although still popular, that post was full of factual mistakes.&lt;/p>
&lt;/div>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div>
&lt;div class="paragraph">
&lt;p>The brightness of LED backlight in TFT displays is sometimes controlled using a technique called PWM or &lt;em>pulse width
modulation&lt;/em>. If implemented incorrectly, particularly if PWM frequency is too low, it can introduce distracting visual
effects and induce eye strain, headaches, and even dizziness in some
people&lt;sup class="footnote">[&lt;a id="_footnoteref_1" class="footnote" href="#_footnotedef_1" title="View footnote.">1&lt;/a>]&lt;/sup>.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Many older laptops set PWM frequency for their backlight too low. Luckily, in laptops equipped with Intel i915 GPU the
PWM frequency is often controlled by the GPU and thus can be adjusted by a software.&lt;/p>
&lt;/div></description></item><item><title>You may be doing FP already</title><link>https://127001.me/post/you-may-be-doing-fp-already/</link><pubDate>Mon, 10 Feb 2020 22:59:08 -0500</pubDate><guid>https://127001.me/post/you-may-be-doing-fp-already/</guid><description>&lt;div class="paragraph">
&lt;p>Functional programming (FP) has been a somewhat hot topic in recent years in my surroundings. Although in my &lt;em>close&lt;/em>
surroundings people are usually not zealous or overly excited, I do notice sometimes talks, discussions and vocally
expressed opinions where &lt;em>tremendous&lt;/em> benefits of FP over other paradigms are claimed, through presenting FP as a
fundamentally new approach to writing code, opposite to, say, OOP. Some go as far as saying, that one must fully ditch
OOP and all related experience because it&amp;#8217;s all just a mistake.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Such extreme claims are rarely challenged. When a person with an OOP background gets involved in any FP-related
discussion, it quickly gets overwhelmed with new unfamiliar vocabulary: algebras, monads, semigroups, functors, type
classes&amp;#8230;&amp;#8203; And I start questioning intents of those claims â€” are they made to make people shift to FP, or to prove, that
some definition of FP is better than some definition of OOP?&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>With this post, I hope to show that FP can be seen as an evolutionary step, a generalization over practices we already
consider the best in OOP paradigm. And if viewed like this, it can be useful even when adopted gradually. I hope this
point of view will persuade programmers to look into FP and to borrow new techniques from it to improve non-FP code.&lt;/p>
&lt;/div></description></item><item><title>Filtering ScalaTest tests by tags in sbt</title><link>https://127001.me/post/filter-scalatests-by-tags-in-sbt/</link><pubDate>Mon, 08 Jul 2019 11:00:00 -0400</pubDate><guid>https://127001.me/post/filter-scalatests-by-tags-in-sbt/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;em>ScalaTest&lt;/em> lets you tagging your tests with arbitrary tags and then filtering
by tags when executing tests.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>It&amp;#8217;s not immediately obvious though, how to make use of this in &lt;em>sbt&lt;/em>, at least
I couldn&amp;#8217;t find an answer on the very first page in Google or StackOverflow,
and I remember myself looking for a complete solution for quite a while, so
here it is.&lt;/p>
&lt;/div></description></item><item><title>Turning Synology NAS into a geeky media server: PulseAudio</title><link>https://127001.me/post/synology/mediaserver-p2/</link><pubDate>Tue, 16 Aug 2016 21:00:00 +0100</pubDate><guid>https://127001.me/post/synology/mediaserver-p2/</guid><description>&lt;div class="admonitionblock warning">
&lt;table>
&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-warning" title="Warning">&lt;/i>
&lt;/td>
&lt;td class="content">
&lt;div class="paragraph">
&lt;p>This post was written in pre-docker era. Back in the time it was necessary to perform many things that are
no longer required on modern devices (like installing Debian Chroot package which, expectedly, is no longer offered).&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Modern devices with Docker support or equivalent features (FWIW, my choice is Linux Station from QNAP) are much more
friendly towards linux enthusiasts&lt;/p>
&lt;/div>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div>
&lt;div class="admonitionblock tip">
&lt;table>
&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-tip" title="Tip">&lt;/i>
&lt;/td>
&lt;td class="content">
Required files can be downloaded from &lt;a href="https://github.com/edio/synology-mediaserver" class="bare">https://github.com/edio/synology-mediaserver&lt;/a>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div>
&lt;div class="paragraph">
&lt;p>&lt;a href="https://127001.me/post/synology/mediaserver-p1">Previously&lt;/a> we&amp;#8217;ve covered ALSA setup and Debian chroot.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>In this post I&amp;#8217;ll describe how to set up PulseAudio in Debian chroot, so that it&amp;#8217;s possible to stream any sound from
linux-powered pc to a sound card connected to Synology NAS.&lt;/p>
&lt;/div></description></item><item><title>Overloading that is not permitted or Java bridge methods</title><link>https://127001.me/post/java-bridge-methods/</link><pubDate>Mon, 09 May 2016 00:59:08 +0200</pubDate><guid>https://127001.me/post/java-bridge-methods/</guid><description>&lt;div class="paragraph">
&lt;p>Most of my technical interviews for Java developer position include a puzzle, where candidate should implement 2 very
similar interfaces in a single class:&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="highlightjs highlight">&lt;code data-lang="java" class="language-java hljs">// Implement both interfaces in a single class if possible
// Explain why possible or not possible
interface WithPrimitiveInt {
void m(int i);
}
interface WithInteger {
void m(Integer i);
}&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Sometimes candidates, not being sure about the right answer, are willing to solve the following puzzle instead (I give
it to candidates later anyway):&lt;/p>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="highlightjs highlight">&lt;code data-lang="java" class="language-java hljs">interface S {
String m(int i);
}
interface V {
void m(int i);
}&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div></description></item><item><title>Turning Synology NAS into a geeky media server</title><link>https://127001.me/post/synology/mediaserver-p1/</link><pubDate>Wed, 06 Jan 2016 01:51:40 +0100</pubDate><guid>https://127001.me/post/synology/mediaserver-p1/</guid><description>&lt;div class="admonitionblock warning">
&lt;table>
&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-warning" title="Warning">&lt;/i>
&lt;/td>
&lt;td class="content">
&lt;div class="paragraph">
&lt;p>This post was written in pre-docker era. Back in the time it was necessary to perform many things that are
no longer required on modern devices (like installing Debian Chroot package which, expectedly, is no longer offered).&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Modern devices with Docker support or equivalent features (FWIW, my choice is Linux Station from QNAP) are much more
friendly towards linux enthusiasts&lt;/p>
&lt;/div>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div>
&lt;div class="admonitionblock tip">
&lt;table>
&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-tip" title="Tip">&lt;/i>
&lt;/td>
&lt;td class="content">
Required files can be downloaded from &lt;a href="https://github.com/edio/synology-mediaserver" class="bare">https://github.com/edio/synology-mediaserver&lt;/a>
&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div>
&lt;div class="paragraph">
&lt;p>I&amp;#8217;m not a huge fan of Synology. I bought my DS214 by friend&amp;#8217;s recommendation and became frustrated with it right after
the purchase. Bundled software was limited and buggy. Many people find Synology products great. But for me it just
didn&amp;#8217;t work well because it forced its use cases on me instead of being a helpful tool for my own very specific use
cases.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Anyway, I wasn&amp;#8217;t willing to lose money on reselling my NAS, so I decided to get as much as possible from it and
currently with my DS214Play I can:&lt;/p>
&lt;/div>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Play virtually any sound via connected USB sound card.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Particularly, I can play my huge collection of high-resolution music in various formats (with replaygain tags
respected). All that thanks to &lt;em>mpd&lt;/em>, which I can control from any decent phone, web-browser or even smart-watch and
scrobble all statistics to Last.fm.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Stream sound from my laptop via &lt;strong>PulseAudio&lt;/strong>, while watching videos on YouTube or movies.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>randrctl â€” profile-based screen manager for X</title><link>https://127001.me/post/introducing-randrctl/</link><pubDate>Wed, 17 Sep 2014 18:45:22 +0300</pubDate><guid>https://127001.me/post/introducing-randrctl/</guid><description>&lt;div class="paragraph">
&lt;p>While having some free time, decided to automate one of my daily routines â€” setting up external display.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Idea appeared long before I was told about famous (or not?) &lt;a href="https://github.com/wertarbyte/autorandr">autorandr&lt;/a> project.
So if you are familiar with autorandr, you are already familiar with randrctl idea.&lt;/p>
&lt;/div></description></item><item><title>How Java logging frameworks determine caller class and method name</title><link>https://127001.me/post/java-logging-caller-class-and-method/</link><pubDate>Tue, 08 Apr 2014 23:54:49 +0200</pubDate><guid>https://127001.me/post/java-logging-caller-class-and-method/</guid><description>&lt;div class="paragraph">
&lt;p>This post describes how java logging frameworks (&lt;em>log4j&lt;/em>, for example) know a point (concrete class and method name), where logging statement has been invoked.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>I decided to write this post, because quite often I communicate with developers, who do not understant what is the cost of writing caller information to logs, and why such high cost is imposed.&lt;/p>
&lt;/div></description></item><item><title>Listen tracks from youtube in mpd</title><link>https://127001.me/post/youtube-in-mpd/</link><pubDate>Fri, 13 Sep 2013 14:18:07 +0300</pubDate><guid>https://127001.me/post/youtube-in-mpd/</guid><description>&lt;div class="paragraph">
&lt;p>We&amp;#8217;ll need&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;em>mpd&lt;/em> with &lt;em>curl&lt;/em> support&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://rg3.github.io/youtube-dl/">youtube-dl&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item></channel></rss>